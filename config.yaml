# source venv_neuron_segmentation/bin/activate

device: "server"  # server или laptop. Если server, то будут использоваться настройки для сохранения изображений

train: True  # тренировать модель или нет. Если False - остальные настройки пропускаем
scale_img: 0.3 # чем ближе к 1, тем гипотетически выше точность, но меньше скорость вычислений
batch_size: 3
learning_rate: 0.001 # default 0.0001
epochs: 10

predict: True  # нужно ли делать предикты нейронкой. Если False - остальные настройки пропускаем
start_predictions: "beginning" # или с определенного номера томо сечения
sample_number: "0"  # id-шник образца на синхротроне (опционально, из отчета по измерениям)
target_feature: "detection_sample"  # что сегментируем (произвольный формат имени)
input_tomo_images: "/home/ankhafizov/Desktop/UnetNeuronsSegmentation/data/imgs_o"  # путь к папке с экспериментальными изображениями (для инференса после обучения)
mask_images: "mask_binary_images"  # название (или путь) к папке, куда нейронка будет выгружать полученные маски (если ее еще нет, то она сгенерится)

cleaning: True  # нужно ли "заливать дырки" и удалять прочие артефакты в бинарных масках, полученных нейронкой. Если False - остальные настройки пропускаем
rm_small_elements: True # True - оставит только топ самых больших кластеров пикселей, False - просто заливка дырок
accepted_count_of_large_elements: 8 # Топ кластеров, который надо оставить. Например, если 2, то уберет все детали изображения кроме 2 самых больших

apply_masks: True # отмаскировать все исходные томо-изображения из папки input_tomo_images
output_masked_images: "mask_applied"  # название (или путь) к папке, где хранить отмаскированные томо изображения

segment_small_features: False  # классическая сегментация (RandomWalker) малых деталей на изображений.  - нейроны, сосуды и т.д. Если False - остальные настройки пропускаем
RandomWalker_mask_folder: "neurons_binary_mask"  # куда сохранять бинарные маски рандомволкера
z_ranges: [[0, 560], [550, 1_110], [1_100, 1_660], [1_650, 2120]]  # как декомпозировать вычисления для оптимизации по томо слоям
apply_boundary_mask: True  # отмаскировать масками mask_images результат сегментеровации рандомволкера, чтобы не было случайных артефактов за пределами сегментации нейронки
separate_small_features: True # разделить фичи рандомволкера на крупные и малые
threshold_cluster_size: 7000  # критерий разделения на большие и малые связных вокселей (структурный элемент - ball(1))